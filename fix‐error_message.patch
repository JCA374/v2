--- strategy.py
+++ strategy.py
@@     def analyze_stock(self, ticker):
-        try:
+        result = {"ticker": ticker, "error": None, "error_message": None}
+        try:
         stock = yf.Ticker(ticker)
@@
         if hist is None or hist.empty:
             return {
                 "ticker": ticker,
                 "error": "No data available",
                 "error_message": f"Fel vid analys: ingen historik för {ticker}"
             }
@@
-        except Exception as e:
-            return {"ticker": ticker, "error": str(e)}
+        except Exception as e:
+            err = str(e)
+            logging.error(f"Error analyzing {ticker}: {err}")
+            return {
+                "ticker": ticker,
+                "error": err,
+                "error_message": f"Fel vid analys: {err}"
+            }

 def batch_analyze(self, tickers, progress_callback=None):
@@     def batch_analyze(self, tickers, progress_callback=None):
-        for i, ticker in enumerate(tickers):
+        for i, ticker in enumerate(tickers):
          if progress_callback:
@@
-            try:
-                analysis = self.analyze_stock(ticker)
-                # … old error handling removed …
-            except Exception as e:
-                # … old exception handling …
+            analysis = self.analyze_stock(ticker)
+            results.append(analysis)
+            if analysis.get("error"):
+                failed_analyses.append({
+                    "ticker": ticker,
+                    "error": analysis["error"],
+                    "error_message": analysis.get(
+                        "error_message",
+                        f"Fel vid analys: {analysis['error']}"
+                    )
+                })
